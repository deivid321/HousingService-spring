/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.deivydas.voroneckis.housingservice.springmvc;

import com.deivydas.voroneckis.domain.Room;
import com.deivydas.voroneckis.domain.Student;
import com.deivydas.voroneckis.service.IHousingFacade;
import com.deivydas.voroneckis.service.HousingFacade;
import java.util.ArrayList;
import javax.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

/**
 *
 * @author vdeiv
 */
@Controller
@RequestMapping(value = "/rooms")
public class RoomController {

    @Autowired
    private IHousingFacade facade;

    @RequestMapping(method = RequestMethod.GET)
    public ModelAndView getHouses() {
        return new ModelAndView("rooms", "rooms", facade.getRoomsList());
    }

    @RequestMapping(value = "/new", method = RequestMethod.GET)
    public ModelAndView getNewForm() {
        ModelAndView model = new ModelAndView("roomForm", "room", new Room());
        model.addObject("students", facade.getStudentsList());
        return model;
    }

    @RequestMapping(method = RequestMethod.POST)
    public String save(@ModelAttribute("room") Room room, BindingResult result) {
        if (result.hasErrors()) {
            //ModelAndView object aan
            //modelAndView.addObject("erros", result.getAllErrors()); What is it?
            System.out.print("ERRORAS");
            return "roomForm";
        }
        if (room.getId() == null) {
            facade.addRoom(room);
        } else {
            facade.updateRoom(room);
        }
        System.out.print(facade.getRoomsList());
        return "redirect:/rooms.htm";
    }

    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ModelAndView getEditForm(@PathVariable long id) {
        Room room = facade.getRoom(id);
        return new ModelAndView("roomForm", "room", facade.getRoom(id));
    }

}
