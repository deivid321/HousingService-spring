/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.deivydas.voroneckis.housingservice.springmvc;

import com.deivydas.voroneckis.domain.Room;
import com.deivydas.voroneckis.domain.Student;
import com.deivydas.voroneckis.service.IHousingFacade;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

/**
 *
 * @author vdeiv
 */
@Controller
@RequestMapping(value = "/students")
public class StudentController {

    @Autowired
    private IHousingFacade facade;

    @RequestMapping(method = RequestMethod.GET)
    public ModelAndView getStudents() {
        return new ModelAndView("students", "students", facade.getStudentsList());
    }
    
    @RequestMapping(value = "/new", method = RequestMethod.GET)
    public ModelAndView getNewForm() {
        return new ModelAndView("studentForm", "student", new Student()).addObject("rooms", facade.getRoomsList());
    }

    @RequestMapping(method = RequestMethod.POST)
    public String save(@ModelAttribute("student") Student student, BindingResult result) {
        if (result.hasErrors()) {
            //ModelAndView object aan
            //modelAndView.addObject("erros", result.getAllErrors()); What is it?
            return "studentForm";
        }
        if (student.getId() == null) {
            facade.addStudent(student);
        } else {
            facade.updateStudent(student);
        };
        
        Room room = student.getRoom();
        room.settleNewStudent(student);
        facade.updateRoom(room);     
                
        System.out.print(facade.getStudentsList());
        return "redirect:/students.htm";
    }

    @RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public ModelAndView getEditForm(@PathVariable long id) {
        return new ModelAndView("studentForm", "student", facade.getStudent(id));
    }

}
